version: '3.8'

services:
  torah-search:
    build:
      context: .
      dockerfile: Dockerfile.optimized
    environment:
      - FLASK_ENV=${FLASK_ENV}
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - MAX_WORKERS=4  # Optimal for 8 vCPU: 1.5x CPU cores for I/O bound tasks
      - BATCH_SIZE_MULTIPLIER=150  # Balanced batch size
      - REDIS_POOL_SIZE=20
      - REDIS_MAX_CONNECTIONS=40
      - PROMETHEUS_METRICS=true
    volumes:
      - ./torah.txt:/app/torah.txt:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - torah-network

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile.optimized
    command: celery -A app.tasks.celery_app worker --loglevel=info --concurrency=4
    environment:
      - FLASK_ENV=${FLASK_ENV}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP=true
    volumes:
      - ./torah.txt:/app/torah.txt:ro
    restart: unless-stopped
    networks:
      - torah-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - torah-search
    restart: unless-stopped
    networks:
      - torah-network

networks:
  torah-network:
    driver: bridge
