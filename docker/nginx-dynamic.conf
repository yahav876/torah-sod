events {
    worker_connections 2048;  # Increased for better performance
    multi_accept on;
    use epoll;  # More efficient event processing
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Add MIME type for favicon.ico
    types {
        image/x-icon                       ico;
    }
    
    # Use Docker's internal DNS resolver
    resolver 127.0.0.11 valid=30s;
    
    # Optimize for t3.2xlarge
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100000;
    reset_timedout_connection on;
    client_body_timeout 10;
    send_timeout 2;
    
    # File descriptor cache
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    upstream torah_app {
        # Docker Compose will create containers with names like:
        # tzfanim-tzfanim-search-1, tzfanim-tzfanim-search-2, etc.
        # This will dynamically discover all running instances
        server tzfanim-search:8000 max_fails=3 fail_timeout=30s;
        
        # Keep connections alive for better performance
        keepalive 64;  # Increased for 3 replicas
        
        # Load balancing method
        least_conn;  # Use least connections method for better distribution
    }

    server {
        listen 80;
        server_name localhost;

        client_max_body_size 10M;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss;

        # Static files handling
        location /static/ {
            root /app;
            access_log off;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }

        # Favicon handling
        location = /favicon.ico {
            access_log off;
            log_not_found off;
            root /usr/share/nginx/html;
            try_files $uri =404;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }

        # Server-Sent Events endpoint
        location /api/search/stream {
            proxy_pass http://torah_app/api/search/stream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # SSE specific settings
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 300s;
            proxy_http_version 1.1;
            proxy_set_header Connection '';
            chunked_transfer_encoding off;
            
            # Disable gzip for SSE
            gzip off;
        }

        # Main application
        location / {
            proxy_pass http://torah_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Connection pooling
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://torah_app/health;
            access_log off;
        }

        # Nginx status (for monitoring)
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
    }
}
